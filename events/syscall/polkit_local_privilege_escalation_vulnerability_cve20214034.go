//go:build linux
// +build linux

// SPDX-License-Identifier: Apache-2.0
/*
Copyright (C) 2024 The Falco Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package syscall

import (
	"errors"
	"os/exec"

	"github.com/falcosecurity/event-generator/events"
)

var _ = events.Register(
	PolkitLocalPrivilegeEscalationVulnerabilityCVE20214034,
	events.WithDisabled(), // this rules is not included in falco_rules.yaml (stable rules), so disable the action
)

func PolkitLocalPrivilegeEscalationVulnerabilityCVE20214034(h events.Helper) error {
	pkexec, err := exec.LookPath("pkexec")
	if err != nil {
		// if we don't have a pkexec, just bail
		return &events.ErrSkipped{
			Reason: "pkexec executable file not found in $PATH",
		}
	}

	// run pkexec as non-root user and without arguments
	err = runAsUser(h, "daemon", pkexec)

	// silently ignore the "exit status 127: Refusing to render service to dead parents" error
	// we need to unwrap the error to get the exit code
	unerr := errors.Unwrap(err)
	if unerr == nil {
		unerr = err
	}
	if ee, ok := unerr.(*exec.ExitError); ok && ee.ProcessState.ExitCode() == 127 {
		return &events.ErrSkipped{
			Reason: "pkexec execution failed with exit code 127 (might be ok) - probably patched and not vulnerable to CVE-2021-4034",
		}
	}

	return err
}
